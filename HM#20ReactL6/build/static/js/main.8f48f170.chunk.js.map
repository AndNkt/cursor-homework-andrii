{"version":3,"sources":["container/ListPosts.js","actions/index.js","container/AddPost.js","App.js","reducers/userData.js","reducers/index.js","reducers/Posts.js","index.js"],"names":["ListPost","console","log","this","props","Posts","extra","extraPost","map","post","className","key","id","src","av_img","name","nick_name","date","post_message","alt","post_img","createListItems","Component","connect","state","addedPost","updatePostText","posttext","type","payload","AddPost","getData","val","toLocaleLowerCase","split","slice","toString","clonedState","Math","random","substr","setState","changeHandler","e","target","value","selectHandler","Fragment","size","onChange","evt","onClick","dispatch","bindActionCreators","App","ListPosts","InitialState","allReducers","combineReducers","action","myStore","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8f48f170.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n//import {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass ListPost extends Component {\r\n    \r\n    componentDidUpdate(){\r\n        console.log('List updated -props',this.props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log('List -mounted',this.props);\r\n\r\n    }\r\n\r\n    createListItems() {\r\n       //\r\n        let combined = [...this.props.Posts, ...this.props.extra.extraPost]\r\n        //\r\n        //this.props.Posts.map((post) => {\r\n        return combined.map((post) => {\r\n            return (\r\n                <div className=\"container p-2\" key={post.id}>\r\n                    <div className=\"row align-items-start\">\r\n                        <div className=\"col-2\">\r\n                            <img className='author-avatar' src={post.av_img} />\r\n                        </div>\r\n                        <div className=\"col-lg\">\r\n                            <span className=\"author-name\">{post.name} </span><i className=\"fas fa-check-circle author-name\"></i> <span className=\"author-nick\">{post.nick_name}</span><span>{post.date}</span>\r\n                            <div className=\"content\">{post.post_message}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-2\"> </div>\r\n                        <div className=\"col-lg\">\r\n                            <img className='post-image' alt='Post image' src={post.post_img}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row align-items-center mt-2\">\r\n                        <div className=\"col\"> </div>\r\n                        <div className=\"col\"><i className=\"far fa-comment\"></i> <span>482</span> </div>\r\n                        <div className=\"col\"><i className=\"fas fa-head-side-mask\"></i> <span>182</span> </div>\r\n                        <div className=\"col\"><i className=\"fas fa-head-side-cough\"></i> <span>283</span> </div>\r\n                        <div className=\"col\"><i className=\"fas fa-download\"></i></div>\r\n                        <div className=\"col\"> </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                {this.createListItems()}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n//takes piece of state(part of the store) and send to component as props\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        Posts: state.Posts,\r\n        extra:state.addedPost\r\n    }\r\n}\r\n\r\n\r\n\r\n//connect - take component\r\nexport default connect(mapStateToProps)(ListPost);\r\n\r\n","export const increment = (num) => {\r\n    return{\r\n        type: 'INCREMENT',\r\n        payload: num\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return{\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const like = (likesNum) => {\r\n    return{\r\n        type: 'ADD_LIKE',\r\n        payload: likesNum\r\n    }\r\n}\r\n\r\nexport const selectUser = (user) =>{\r\n    console.log('You clicked on user: ', user.first);\r\n    return{\r\n        type:'USER_SELECTED',\r\n        payload:user\r\n    }\r\n}\r\n\r\nexport const updatePostText =  (posttext) => ({ type: \"CHANGE_TEXT\", payload: posttext});\r\n\r\nexport const updatePostImage = imageurl => ({ type: \"CHANGE_IMAGE\", payload: imageurl}); \r\n\r\nexport const addPost = () => ({type:\"ADD_POST\"});\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { updatePostText } from '../actions'\r\n\r\nclass AddPost extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            post_message:'',\r\n            post_img:'',\r\n            name:'Darts Waiter'\r\n        };\r\n    }\r\n\r\n    getData=(val)=>{\r\n        let nick_name = this.state.name.toLocaleLowerCase().split(' ').slice(0,1).toString();\r\n        let av_img;\r\n\r\n        switch(nick_name){\r\n            case 'darts':\r\n                av_img='https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Darts_in_a_dartboard.jpg/220px-Darts_in_a_dartboard.jpg';\r\n                break;\r\n\r\n            case 'bilbo':\r\n                av_img='https://upload.wikimedia.org/wikipedia/en/7/78/Bilbo_Baggins.jpg';\r\n                break;\r\n            \r\n            case 'slim':\r\n                av_img='https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Eminem_-_Oslo_Sommertid_2018_%28Norway%29.png/220px-Eminem_-_Oslo_Sommertid_2018_%28Norway%29.png';\r\n                break;\r\n                \r\n            default:\r\n                av_img=''    \r\n        }\r\n\r\n        let clonedState = {...this.state, 'id':Math.random().toString(36).substr(2, 7), date:'26 feb', nick_name,av_img};\r\n        //console.log(clonedState)\r\n\r\n        this.props.updatePostText(clonedState);\r\n        this.setState({\r\n            post_message:'',\r\n            post_img:'',\r\n            name:'Darts Waiter'\r\n        })\r\n    }\r\n\r\n    changeHandler=(e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    selectHandler=(e)=>{\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2>Post text:</h2>\r\n                <input type=\"text\" size=\"40\" name='post_message' value={this.state.post_message} onChange={(evt)=>{this.changeHandler(evt)}}/>\r\n                <h2>PostImage:(url)</h2>\r\n                <input type=\"text\" size=\"40\" name='post_img'  value={this.state.post_img} onChange={(evt)=>{this.changeHandler(evt)}}/>\r\n                <h2>Select author:</h2>\r\n                <select name=\"select\" id=\"selectedName\" onChange={(e)=>{this.selectHandler(e)}}>\r\n                    <option value=\"Darts Waiter\" >Darts Waiter</option>\r\n                    <option value=\"Bilbo Backpackins\">Bilbo Backpackins</option>\r\n                    <option value=\"Slim Shady\">Slim Shady</option>\r\n                </select>\r\n                <button onClick={(e)=>{this.getData(e.target.value)}}>Add post</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction matchDispatchToProps(dispatch){\r\n    //connect action creator \r\n    return bindActionCreators({\r\n        updatePostText,\r\n    }, dispatch)\r\n\r\n}\r\n\r\n\r\nexport default connect(null, matchDispatchToProps)(AddPost);","import React from 'react';\n/* import { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, like } from './actions'\n */\n\nimport ListPosts from './container/ListPosts';\n\nimport AddPost from './container/AddPost';\n\nfunction App() {\n/*   const counter = useSelector(state => state.counter);\n  const isLogedIn = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n */\n  return (\n    <div className=\"App\">\n \n      <AddPost/>\n      <hr/>\n      <ListPosts />\n\n    </div>\n  );\n}\n\nexport default App;\n","\r\n\r\nexport const counterReducer = (state=10, action)=>{\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            state = state+action.payload;\r\n            break; \r\n        case 'DECREMENT':\r\n            return state-1\r\n        default:\r\n            return state\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nconst InitialState = {\r\n    extraPost: []\r\n  };\r\n\r\n\r\nexport const addedPost = (state=InitialState,action) =>{\r\n    switch(action.type){\r\n        case 'CHANGE_TEXT':\r\n\r\n            return {\r\n                ...state,\r\n               extraPost:[\r\n                   ...state.extraPost, action.payload\r\n               ]\r\n            } \r\n\r\n            break;\r\n    }\r\n    return {...state}\r\n} \r\n    ","\r\n\r\n\r\nimport Posts from './Posts'\r\n//import updatePostImage from './userData';\r\n\r\nimport {addedPost} from './userData';\r\n//import addPost from './userData';\r\n\r\n\r\n\r\n\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    Posts,\r\n    addedPost,\r\n    //  updatePostImage,\r\n    //addPost\r\n}); \r\n\r\n\r\n\r\nexport default allReducers;","export default function(){\r\n\treturn[\r\n\t\t{\r\n\t\t\tid:1,\r\n\t\t\tname: 'Anakin Skybroker',\r\n\t\t\tav_img: 'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n\t\t\tpost_img: 'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n            post_message: 'Whatt. Who is Ray? Why she is sky walker? Luke?',\r\n            nick_name: 'dart_vader',\r\n            date: '26 feb'\r\n        },\r\n        {\r\n\t\t\tid:2,\r\n\t\t\tname: 'Tony Soprano',\r\n\t\t\tav_img: 'https://upload.wikimedia.org/wikipedia/en/thumb/c/c2/Tony_Soprano.jpg/270px-Tony_Soprano.jpg',\r\n\t\t\tpost_img: 'https://i.pinimg.com/564x/3d/59/34/3d59348bdebee34a999692d8a61ee3b6.jpg',\r\n            post_message: 'Paulie what a **ck?',\r\n            nick_name: 'captain_Tony',\r\n            date: '23 feb'\r\n\r\n        },\r\n        {\r\n\t\t\tid:3,\r\n\t\t\tname: 'Saul Goodman',\r\n\t\t\tav_img: 'https://upload.wikimedia.org/wikipedia/en/thumb/1/16/Saul_Goodman.jpg/220px-Saul_Goodman.jpg',\r\n\t\t\tpost_img: 'https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/Better_Call_Saul_logo.svg/250px-Better_Call_Saul_logo.svg.png',\r\n            post_message: 'Call. Me',\r\n            nick_name: 'saul_lawyer',\r\n            date: '24 feb'\r\n        }\r\n\t]\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport allReducer from './reducers'\n\nconst myStore = createStore(allReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={myStore}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n  );\n  "],"sourceRoot":""}